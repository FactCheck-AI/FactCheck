#Space #security: open-source code vs proprietary software❓An example with the Cubesat Space Protocol (CSP) stack freely available on github 👇 🛰 The Cubesat Space Protocol is a popular, open-source protocol used by many universities but also commercial missions 💪 With over 40 contributors, 2000 commits and 400 stars, it is the most popular opensource library for satellites on #GitHub. ⚙ Features of the protocol include a thread-safe socket API, a modular network interface system, a small memory footprint and integrations for Linux as well as for popular embedded OSs FreeRTOS and Zephyr. 🔗 https://lnkd.in/eyJwXjJ7 🔍 Security researchers Lukas Seidel and Julian Beier presented their research on bringing #Rust to space systems at the ESA event S3 last month (🔗 https://lnkd.in/e8ZbQy4y) 🛠 In the experimental section, they selected the CSP stack as a perfect candidate to show how Rust could be applied on a typical mission control software written in C 💡 Before rewriting some part of the code in Rust, they had the great idea of running a basic security analysis on the C implementation 🔦 They used a fuzzing library to test the security of the #CAN interface by putting pseudo packets into the queue and testing if certain parts of the library crash They managed to identify 3 previously undiscovered security issues: 1️⃣ First, an off-by-one error allows processed CAN frames to trigger a buffer overflow despite the presence of a guard condition. 2️⃣ Second, an unchecked size field in raw incoming CAN frames enables maliciously crafted frames to trigger another buffer overflow. 3️⃣ Third, the missing check of a return value of a malloc call in the USART interface, potentially leading to a NULL pointer dereference. ✅ Eventually all findings were disclosed to and acknowledged by the maintainers and eventually patches improved the overall code safety of the library 👏 👉 That's a great example of how open-source can benefit from open, transparent security research. Nonetheless, vulnerabilities exist and deploying unchecked code on a spacecraft can be a costly mistake 💣 Meanwhile: 📰 This week, in a Via Satellite article, Space ISAC reminded the space industry that the current threat level on space assets is "HIGH" 🚨 due to: (I quote) "The potential exploitation of critical vulnerabilities where threat groups continue to leverage #zeroday vulnerabilities in commonly used software and #Opensource repositories to gain initial access to victim networks" 🔗 https://lnkd.in/eZ7kXk4U 👉 Regardless if you go for proprietary or opensource, security checks, audits, certifications are a good start to minimize the risks.