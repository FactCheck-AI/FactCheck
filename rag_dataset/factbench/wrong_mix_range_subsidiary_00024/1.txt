Last year, the SCO Group, a software company based in Lindon , Utah , filed a $3 billion suit against IBM, alleging that the company’s use of the Linux open source operating system was illegal. SCO’s suit claims ownership of the copyright to Unix, an operating system produced by Bell labs in the late 1960s and upon which the popular open-source program Linux is based.

As further evidence that open source software is fast becoming a viable commercial choice, SCO is now also suing DaimlerChrylser AG for its use of Unix and AutoZone, an auto parts retailer, for its use of Linux. The company has indicated it plans to sue other corporations that use open source software in the future. IBM, for its part, has countersued, alleging that SCO is trying to make money by laying claim to a code that is freely available to the public. Novell, another company sued by SCO last year, is also challenging the company’s ownership assertion.

These recent lawsuits are just the latest challenge to widespread use of open source operating systems. Linux, the best-known system, was developed in the 1990s by a college student in Finland . Unlike the source code of the Windows operating system, which is proprietary, the Linux code is available free to anyone. Computer users can simply download Linux off the web if they feel technically competent enough to try it out. Indeed, the only groups making money off Linux are companies that sell support services for the product.

Given the pros and cons of open-source software, the debate these days over its actual usefulness vs. the benefits of proprietary software depends in part on the development of new applications. It was a topic that drew particularly spirited discussion during a panel on “Delivering Value and Innovation Using Open Source Software” at the Wharton Technology Conference held in Philadelphia on Feb. 27.

Questions arose as to what, for example, is the best way to maximize the usefulness of the open source code; whether open source operation systems can remain truly open while also gaining acceptance in the corporate market place; and whether offering a source code to the general community will ensure that well-trained technologists find flaws and improve the product.

“We are huge believers in open source,” said Michael A. Olson, the president and CEO of Sleepycat Software, which distributes and licenses the open-source-based Berkeley DB data management software. “But if you run a business on IT infrastructures, you need to know that things will work. My laptop runs Microsoft Office. There are good applications in both the proprietary world and the open source world … You have to trust that a Linux community will survive,” he said. To achieve that trust, you need “a community that will have legs,” one that has “a commercial product” to work on.

While a customer can go to Sleepycat’s Website (www.sleepycat.com) and download the latest version of Berkeley DB, the company still makes proprietary and customized versions of the software, for which they charge licensing fees. “You can think of it as a chameleon model,” Olson said. “The advantage to us is that we get a huge” number of people looking at the basic product, some of whom will then choose to customize it or use it in other applications.

In answering the question of how open an open-source system can be, and still survive in the commercial world, one panelist suggested that the answer had to do with standards. “Standards are critically important,” said Jason Matusow, manager of Microsoft’s shared source initiative. “In open-source itself, the Linux kernel is the de facto standard model. The effect of open source is on how people are thinking about the intellectual property they are creating.” Matusow noted that Windows wasn’t created by one person alone but that, like Linux, is the result of many people’s input. “It is hard to do what those of us do,” he added. “It takes thousands of engineers to create Windows.”

The confusion may well be in terminology. The common perception – or misperception in some eyes – is that the open source system is free while Windows costs money. Yet even those who may be Microsoft’s competitors in certain businesses shy away from that comparison.

“There are costs in using open source software, whether it is in installing patches, setting it up or getting reliable support,” commented Stormy Peters, open source program manager at Hewlett-Packard. “But when the open source software is good, you are able to use it as open-source at the bottom levels of your operation.” Then, she said, the company can move some employees doing lower-level programming to more complex jobs where they are more cost-effective. At the same time, she added, “if you are depending on the community to support and work on an open source product, you will have to generate excitement about it. There is not a pool of 600 people out there just waiting to work on your product. You don’t just create a community.”

Longtime Microsoft critic and technology researcher Eric Raymond said that the distinction is not between open source and commercial activity, but between open source and proprietary software, like most Windows applications. No one questions that open-source software developers want to make money, but the distinction for Raymond is that those giving away their code, at least in part, provide greater benefit to the entire community over the long run. “Closed source or proprietary software leads to crappy engineering,” said Raymond. “The IT doesn’t get enough review. Open source, on the other hand, is paid for by the people who want to use it.

“I don’t think a Microsoft-like licensing model will ever happen with Linux,” he added. “There is, indeed, a consolidation with Linux. We have had our series of modifications … But a lot of people in the community have their own incentives. It may not be money, but art. You have to learn what coin they want to be paid in.”

While some critics like Raymond are harping today on the differences between open source and proprietary operating systems and their attendant software applications, others believe there is a historical precedent for long-term cooperation.

“We have had open source for a long time,” said Daniel D. Frye, director of the Linux Technology Center of the IBM Server Group. “The first wave of open sourcing that changed business was the creation of the Internet … when standards were open enough to connect all networks. That set of open standards drove the enablement of the e-business model. Mostly where it has been successful has been in enabling other business models.”

Microsoft’s Matusow said his company is slowly allowing some access to its source code to valued customers, although he admitted that was hardly what most people believe is complete open-sourcing. In addition, he noted, the company has to make certain – more so than in the past – that its customer base wants what it is giving them.

At the same time, the company still likes the way it has handled the proprietary rights to Windows and its other software, and doesn’t intend to change that. “The word ‘proprietary’ has been used in such a pejorative fashion. It is really okay to own something,” Matusow said. “When people talk about the Microsoft licensing model, you expect dirges and draconian things to start. When Red Hat, for example, comes out with something, they call it open source, but there is always an audit clause saying something like ‘You can’t just modify this and re-sell it.’ What they do offer is better installation processes and support – a company that will stand by its product. This is all commercial software licensing, not just ‘the Microsoft model.’”

No one, and clearly not Microsoft, thinks open source operating systems or software is going away. The fact that people like Frye, Peters and Matusow have jobs and staffs centered around open source initiatives at their giant companies, proves that the open-source Davids have made believers out of the big-tech Goliaths.

Yet some who thrived in the open source world before it became bigger fear that it will eventually be overrun by those Goliaths, or that it will become just another commodity. “You can look at what happened in the last several years as commercial America co-opted open source, or, better, how open source has been able to find ways of making money,” said Olson. “But I’m not sure that isn’t a good mix. We think there is a lot of good in open-source, but to survive, it has to become commercial, too.”

According to Raymond, the big distinction in the long run is that open source engineers and users believe that source code is best when it is tested by outsiders as well as insiders. “The fascinating paradox is that you maximize value of intellectual property by giving some of it away,” he noted.

“If you decide to do an application on Linux, you have two paths. One is to do it proprietarily and use Linux as a platform. The other strategy, the more interesting one, is that if you cooperate completely with the open source community, you get testing help you wouldn’t get anywhere else. You multiply your company by the brain power of hundreds of thousands in the open source community out there.

“That is where the real advances in IT will come.”